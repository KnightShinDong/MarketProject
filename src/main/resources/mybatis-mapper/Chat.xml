<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.ORg//DTD Mapper 3.0//EN"
	"http://mybatis.ORg/dtd/mybatis-3-mapper.dtd">
	

	
<mapper namespace="com.hsl.sns.dao.Chat" >

<select id="messageExist" resultType="int">
	SELECT count(*) FROM message WHERE recvnick=#{param1} AND readchk=0
</select>
	
	
<select id="message_list" parameterType="com.hsl.sns.dto.ChatDto" resultType="com.hsl.sns.dto.ChatDto">
   SELECT no, room, sendnick, recvnick, sendtime, readtime, content, readchk
   FROM message
   WHERE no IN (SELECT max(no) FROM message GROUP BY room) AND (sendnick = #{nick} OR recvnick=#{nick})
   ORDER BY no DESC
</select>

<!-- 메세지 list에서 상대방 profile 가져오기 -->
<select id="get_other_profile" parameterType="com.hsl.sns.dto.ChatDto" resultType="String">
    SELECT profileName FROM user_sns
    <choose>
        <when test="sendnick == nick">
            WHERE nick = #{recvnick}
        </when>
        <otherwise>
            WHERE nick = #{sendnick}
        </otherwise>
    </choose>
</select>

<!-- 안읽은 메세지 갯수 가져오기 -->
<select id="count_unread" parameterType="com.hsl.sns.dto.ChatDto" resultType="Int">
    SELECT count(no) FROM message 
    WHERE recvnick=#{nick} AND readchk=0 AND room=#{room}
</select>

<!-- 메세지 내용 가져오기 -->
<select id="room_content_list" parameterType="com.hsl.sns.dto.ChatDto" resultType="com.hsl.sns.dto.ChatDto">
    SELECT m.no, m.room, m.sendnick, m.recvnick, m.sendtime, m.readtime, m.content, m.readchk, u.profileName
    FROM message m LEFT OUTER JOIN user_sns u
    ON m.sendnick = u.nick
    <choose>
        <when test="room != 0">
            WHERE room=#{room} ORDER BY no ASC
        </when>
        <otherwise>
            WHERE (recvnick = #{recvnick} AND sendnick = #{nick}) OR (sendnick = #{recvnick} AND recvnick = #{nick}) ORDER BY no ASC
        </otherwise>
    </choose>

</select>

<!-- 메세지 읽음 처리 -->
<update id="message_read_chk" parameterType="com.hsl.sns.dto.ChatDto">
    UPDATE message SET readchk=1
    <choose>
        <when test="room != 0">
            WHERE room=#{room} AND readchk=0 AND recvnick=#{nick}
        </when>
        <otherwise>
            WHERE sendnick=#{recvnick} AND readchk=0 AND recvnick=#{nick}
        </otherwise>
    </choose>

</update>

<!-- 메세지리스트에서 메세지 보내기 -->
<insert id="messageSendInlist" parameterType="com.hsl.sns.dto.ChatDto">
    <choose>
        <when test="room != 0">
            INSERT INTO MESSAGE VALUES(MESSAGE_SEQ.NEXTVAL, #{room}, #{sendnick}, #{recvnick}, sysdate, sysdate, #{content}, 0)
        </when>
        <otherwise>
            INSERT INTO MESSAGE VALUES(MESSAGE_SEQ.NEXTVAL, #{room}, #{sendnick}, #{recvnick}, sysdate, sysdate, #{content}, 0)
        </otherwise>
    </choose>
</insert>

<!-- room 번호 최댓값 구하기 -->
<select id="max_room"  parameterType="com.hsl.sns.dto.ChatDto" resultType="Int">
    SELECT max(room) FROM message
</select>

<select id="max_room1"  parameterType="com.hsl.sns.dto.ChatDto" resultType="String">
    SELECT room FROM message WHERE ROWNUM=1
</select>

<!-- 메세지 이력이 있는지 검색 -->
<select id="exist_chat" parameterType="com.hsl.sns.dto.ChatDto" resultType="Int">
    SELECT count(no) FROM message 
    WHERE (recvnick = #{recvnick} AND sendnick=#{sendnick}) OR (sendnick = #{recvnick} AND recvnick=#{sendnick})
</select>

<!-- 기존 메세지 내역의 room 번호를 가져옴 -->
<select id="select_room"  parameterType="com.hsl.sns.dto.ChatDto" resultType="String">
	SELECT room FROM (
    SELECT room FROM message
    WHERE (recvnick = #{recvnick} AND sendnick=#{sendnick}) OR (sendnick = #{recvnick} AND recvnick=#{sendnick}))
    WHERE ROWNUM=1
</select>
	
</mapper>
	
	